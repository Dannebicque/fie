security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    role_hierarchy:
    #- ROLE_SUPER_ADMIN:ROLE_PERMANENT

    providers:
        chain_provider:
            chain:
                providers: [etudiant_user, personnel_user,administrateur_user]
        personnel_user:
            entity: { class: App\Entity\Representant, property: email }
        etudiant_user:
            entity: { class: App\Entity\Etudiant, property: email }
        administrateur_user:
            entity: { class: App\Entity\Administrateur, property: email }
#        # used to reload user from session & other features (e.g. switch_user)
#        app_user_provider:
#            entity:
#                class: App\Entity\User
#                property: email


    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            #http_basic: ~
            # les urls auxquels s'appliquent ce firewall, dans ce cas, ce sont toutes les urls
            pattern: ^/

            # La connexion n'est pas requise sur toutes les pages
            # par exemple la page d'accueil
            anonymous: true

            provider: chain_provider
            form_login:
                # Le nom de la route de la page de connexion
                check_path: security_login
                # Le nom de la route où se trouve le formulaire de connexion
                # Si un utilisateur tente d'acceder à une page protégée sans en avoir les droits
                # il sera redirigé sur cette page
                login_path: security_login
                # Securisation des formulaires
                csrf_token_generator: security.csrf.token_manager
                # La page par defaut apres une connexion reussie
                #default_target_path: default_index
                success_handler: redirect.after.login
            logout:
                # La route où se trouve le process de deconnexion
                path: security_logout
                # La route sur laquelle doit etre rediriger l'utilisateur apres une deconnexion
                target: security_login

    access_control:
    # Les regles de securité
    # Là dans ce cas seul les utilisateurs ayant le rôle ROLE_ADMIN
    # peuvent acceder à toutes les pages commençant par /admin
    - { path: '^/connexion', roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: '^/professionnel/gestion', roles: ROLE_ENTREPRISE }
    - { path: '^/etudiant/gestion', roles: ROLE_ETUDIANT }
    - { path: '^/administration', roles: ROLE_ADMINISTRATEUR }
